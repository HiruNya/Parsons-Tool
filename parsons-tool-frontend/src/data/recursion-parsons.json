{
    "problems": [
      {
        "id": "recursion1",
        "name": "Fibonacci",
        "description": "This is a simple implementation of finding the value of a number in the fibonacci sequence by providing the index of the value to find ",
        "difficulty": "Easy",
        "tags": ["recursive", "base case", "conditional"],
        "variations": ["faded", "2d"],
        "language": "C",
        "author": "F.Fromont",
        "problem": {
          "blocks": [
            {
              "id": "r1b1",
              "text": "int Fibonacci(int n) {",
              "fadedIndices": [],
              "answers": []
            },
            {
              "id": "r1b2",
              "text": "if (n <= 2) {",
              "fadedIndices": [],
              "answers": []
            },
            {
              "id": "r1b3",
              "text": "return 1;",
              "fadedIndices": [],
              "answers": []
            },
            {
              "id": "r1b4",
              "text": "} else {",
              "fadedIndices": [],
              "answers": []
            },
            {
              "id": "r1b5",
              "text": "return Fibonacci (n - 1) + Fibonacci(n - 2);}}",
              "fadedIndices": [],
              "answers": []
            },
            {
              "id": "r1b6",
              "text": "}",
              "fadedIndices": [],
              "answers": []
            },
            {
              "id": "r1b7",
              "text": "}",
              "fadedIndices": [],
              "answers": []
            }
          ],
          "solution": ["r1b1","r1b2","r1b3","r1b4","r1b5","r1b6","r1b7"]
        }
      },
      {
          "id": "recursion2",
          "name": "Fibonacci 2.0 electric boogaloo",
          "description": "This is a simple implementation of finding the value of a number in the fibonacci sequence by providing the index of the value to find, but this particular version is done in a slightly more memory optimised manner ",
          "difficulty": "Easy",
          "tags": ["recursive", "base case", "conditional"],
          "variations": ["faded", "2d"],
          "language": "C",
          "author": "F.Fromont",
          "problem": {
            "blocks": [
              {
                "id": "r1b1",
                "text": "int Fibonacci(int n) {",
                "fadedIndices": [],
                "answers": []
              },
              {
                "id": "r1b2",
                "text": "if (n <= 2) {",
                "fadedIndices": [],
                "answers": []
              },
              {
                "id": "r1b3",
                "text": "return 1;",
                "fadedIndices": [],
                "answers": []
              },
              {
                "id": "r1b4",
                "text": "} else {",
                "fadedIndices": [],
                "answers": []
              },
              {
                "id": "r1b5",
                "text": "return Fibonacci (n - 1) + Fibonacci(n - 2);}}",
                "fadedIndices": [],
                "answers": []
              },
              {
                "id": "r1b6",
                "text": "}",
                "fadedIndices": [],
                "answers": []
              },
              {
                "id": "r1b7",
                "text": "}",
                "fadedIndices": [],
                "answers": []
              }
            ],
            "solution": ["r1b1","r1b2","r1b3","r1b4","r1b5","r1b6","r1b7"]
          }
      }
    ]
  }